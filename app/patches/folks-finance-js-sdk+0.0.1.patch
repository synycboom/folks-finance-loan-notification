diff --git a/node_modules/folks-finance-js-sdk/src/v1/lend/constants/mainnetConstants.ts b/node_modules/folks-finance-js-sdk/src/v1/lend/constants/mainnetConstants.ts
index 9ab018d..888a0cc 100644
--- a/node_modules/folks-finance-js-sdk/src/v1/lend/constants/mainnetConstants.ts
+++ b/node_modules/folks-finance-js-sdk/src/v1/lend/constants/mainnetConstants.ts
@@ -1,7 +1,7 @@
 import { Oracle, Pool, ReserveAddress, TokenPair } from "../types";
 
-type MainnetPoolKey = "ALGO" | "USDC" | "USDt" | "goBTC" | "goETH" | "gALGO3";
-const MainnetPools: Record<MainnetPoolKey, Pool> = {
+export type MainnetPoolKey = "ALGO" | "USDC" | "USDt" | "goBTC" | "goETH" | "gALGO3";
+export const MainnetPools: Record<MainnetPoolKey, Pool> = {
   ALGO: {
     appId: 686498781,
     assetId: 0,
@@ -47,8 +47,8 @@ const MainnetPools: Record<MainnetPoolKey, Pool> = {
 };
 
 // CollateralPool-BorrowPool
-type MainnetTokenPairKey = "ALGO-USDC" | "ALGO-USDt" | "ALGO-goBTC" | "ALGO-goETH" | "USDC-ALGO" | "USDC-USDt" | "USDC-goBTC" | "USDC-goETH" | "USDt-ALGO" | "USDt-USDC" | "USDt-goBTC" | "USDt-goETH" | "goBTC-ALGO" | "goBTC-USDC" | "goBTC-USDt" | "goBTC-goETH" | "goETH-ALGO"| "goETH-USDC"| "goETH-USDt"| "goETH-goBTC" | "gALGO3-ALGO" | "gALGO3-USDC"| "gALGO3-USDt"| "gALGO3-goBTC"| "gALGO3-goETH";
-const MainnetTokenPairs: Record<MainnetTokenPairKey, TokenPair> = {
+export type MainnetTokenPairKey = "ALGO-USDC" | "ALGO-USDt" | "ALGO-goBTC" | "ALGO-goETH" | "USDC-ALGO" | "USDC-USDt" | "USDC-goBTC" | "USDC-goETH" | "USDt-ALGO" | "USDt-USDC" | "USDt-goBTC" | "USDt-goETH" | "goBTC-ALGO" | "goBTC-USDC" | "goBTC-USDt" | "goBTC-goETH" | "goETH-ALGO"| "goETH-USDC"| "goETH-USDt"| "goETH-goBTC" | "gALGO3-ALGO" | "gALGO3-USDC"| "gALGO3-USDt"| "gALGO3-goBTC"| "gALGO3-goETH";
+export const MainnetTokenPairs: Record<MainnetTokenPairKey, TokenPair> = {
   "ALGO-USDC": {
     appId: 686541542,
     collateralPool: MainnetPools.ALGO,
@@ -201,20 +201,11 @@ const MainnetTokenPairs: Record<MainnetTokenPairKey, TokenPair> = {
   },
 };
 
-const MainnetOracle: Oracle = {
+export const MainnetOracle: Oracle = {
   oracle1AppId: 687039379,
   oracle2AppId: 689183513,
   oracleAdapterAppId: 689185988,
   decimals: 14,
 };
 
-const MainnetReserveAddress: ReserveAddress = "XQEOICBG6FMMBBWTBOWCMVJX5IQEDUSBF6L4MTSIALWRWODSOV2THX6GTU";
-
-export {
-  MainnetPoolKey,
-  MainnetPools,
-  MainnetTokenPairKey,
-  MainnetTokenPairs,
-  MainnetOracle,
-  MainnetReserveAddress,
-};
+export const MainnetReserveAddress: ReserveAddress = "XQEOICBG6FMMBBWTBOWCMVJX5IQEDUSBF6L4MTSIALWRWODSOV2THX6GTU";
diff --git a/node_modules/folks-finance-js-sdk/src/v1/lend/constants/testnetConstants.ts b/node_modules/folks-finance-js-sdk/src/v1/lend/constants/testnetConstants.ts
index 609bec6..7eb3d45 100644
--- a/node_modules/folks-finance-js-sdk/src/v1/lend/constants/testnetConstants.ts
+++ b/node_modules/folks-finance-js-sdk/src/v1/lend/constants/testnetConstants.ts
@@ -1,7 +1,7 @@
 import { Oracle, Pool, ReserveAddress, TokenPair } from "../types";
 
-type TestnetPoolKey = "ALGO" | "USDC" | "USDt" | "goBTC" | "goETH" | "xUSD";
-const TestnetPools: Record<TestnetPoolKey, Pool> = {
+export type TestnetPoolKey = "ALGO" | "USDC" | "USDt" | "goBTC" | "goETH" | "xUSD";
+export const TestnetPools: Record<TestnetPoolKey, Pool> = {
   "ALGO": {
     appId: 79413571,
     assetId: 0,
@@ -47,8 +47,8 @@ const TestnetPools: Record<TestnetPoolKey, Pool> = {
 };
 
 // CollateralPool-BorrowPool
-type TestnetTokenPairKey = "ALGO-USDC" | "ALGO-USDt" | "ALGO-goBTC" | "ALGO-goETH" | "ALGO-xUSD" | "USDC-ALGO" | "USDC-USDt" | "USDC-goBTC" | "USDC-goETH" | "USDC-xUSD" | "USDt-ALGO" | "USDt-USDC" | "USDt-goBTC" | "USDt-goETH" | "USDt-xUSD" | "goBTC-ALGO" | "goBTC-USDC" | "goBTC-USDt" | "goBTC-goETH" | "goBTC-xUSD" | "goETH-ALGO"| "goETH-USDC"| "goETH-USDt"| "goETH-goBTC" | "goETH-xUSD" | "xUSD-ALGO" | "xUSD-USDC"| "xUSD-USDt"| "xUSD-goBTC"| "xUSD-goETH";
-const TestnetTokenPairs: Record<TestnetTokenPairKey, TokenPair> = {
+export type TestnetTokenPairKey = "ALGO-USDC" | "ALGO-USDt" | "ALGO-goBTC" | "ALGO-goETH" | "ALGO-xUSD" | "USDC-ALGO" | "USDC-USDt" | "USDC-goBTC" | "USDC-goETH" | "USDC-xUSD" | "USDt-ALGO" | "USDt-USDC" | "USDt-goBTC" | "USDt-goETH" | "USDt-xUSD" | "goBTC-ALGO" | "goBTC-USDC" | "goBTC-USDt" | "goBTC-goETH" | "goBTC-xUSD" | "goETH-ALGO"| "goETH-USDC"| "goETH-USDt"| "goETH-goBTC" | "goETH-xUSD" | "xUSD-ALGO" | "xUSD-USDC"| "xUSD-USDt"| "xUSD-goBTC"| "xUSD-goETH";
+export const TestnetTokenPairs: Record<TestnetTokenPairKey, TokenPair> = {
   "ALGO-USDC": {
     appId: 79423184,
     collateralPool: TestnetPools.ALGO,
@@ -231,20 +231,11 @@ const TestnetTokenPairs: Record<TestnetTokenPairKey, TokenPair> = {
   },
 };
 
-const TestnetOracle: Oracle = {
+export const TestnetOracle: Oracle = {
   oracle1AppId: 81298955,
   oracle2AppId: 67734391,
   oracleAdapterAppId: 81315545,
   decimals: 14,
 }
 
-const TestnetReserveAddress: ReserveAddress = "5ISPVI3JMQ4MP5XWWK4ILLKJAYU34U4TGZGXNC5BKR5AK3JBVAMJYBRYEI";
-
-export {
-  TestnetPoolKey,
-  TestnetPools,
-  TestnetTokenPairKey,
-  TestnetTokenPairs,
-  TestnetOracle,
-  TestnetReserveAddress,
-};
+export const TestnetReserveAddress: ReserveAddress = "5ISPVI3JMQ4MP5XWWK4ILLKJAYU34U4TGZGXNC5BKR5AK3JBVAMJYBRYEI";
diff --git a/node_modules/folks-finance-js-sdk/src/v1/lend/types.ts b/node_modules/folks-finance-js-sdk/src/v1/lend/types.ts
index 00acdb7..99b3eb6 100644
--- a/node_modules/folks-finance-js-sdk/src/v1/lend/types.ts
+++ b/node_modules/folks-finance-js-sdk/src/v1/lend/types.ts
@@ -1,4 +1,4 @@
-interface Pool {
+export interface Pool {
   appId: number;
   assetId: number;
   fAssetId: number;
@@ -6,7 +6,7 @@ interface Pool {
   assetDecimals: number;
 }
 
-interface PoolInfo {
+export interface PoolInfo {
   currentRound: number;
   depositInterestRate: bigint; // 14 d.p.
   depositInterestIndex: bigint; // 14 d.p.
@@ -26,13 +26,13 @@ interface PoolInfo {
   isRewardsPaused: boolean;
 }
 
-interface LockAndEarn {
+export interface LockAndEarn {
   appId: number;
   pool: Pool;
   linkAddr: string;
 }
 
-interface LockAndEarnInfo {
+export interface LockAndEarnInfo {
   currentRound: number;
   rewardsRatio: bigint; // 14 d.p.
   timeLocked: bigint;
@@ -40,7 +40,7 @@ interface LockAndEarnInfo {
   limit: bigint;
 }
 
-interface LockedDepositInfo {
+export interface LockedDepositInfo {
   currentRound: number;
   escrowAddress: string;
   userAddress: string;
@@ -48,12 +48,12 @@ interface LockedDepositInfo {
   release: bigint;
 }
 
-interface RewardsAggregator {
+export interface RewardsAggregator {
   appId: number;
   pool: Pool;
 }
 
-interface AssetRewardsInfo {
+export interface AssetRewardsInfo {
   assetId: number;
   periodRewards: {
     claimed: bigint;
@@ -62,13 +62,13 @@ interface AssetRewardsInfo {
   }[];
 }
 
-interface RewardsAggregatorInfo {
+export interface RewardsAggregatorInfo {
   currentRound: number;
   vestingPeriodLengths: bigint[];
   assetsRewards: AssetRewardsInfo[];
 }
 
-interface StakedRewardsInfo {
+export interface StakedRewardsInfo {
   currentRound: number;
   escrowAddress: string;
   userAddress: string;
@@ -82,21 +82,21 @@ interface StakedRewardsInfo {
   }[];
 }
 
-interface TokenPair {
+export interface TokenPair {
   appId: number;
   collateralPool: Pool;
   borrowPool: Pool;
   linkAddr: string;
 }
 
-interface TokenPairInfo {
+export interface TokenPairInfo {
   currentRound: number;
   loanToValueRatio: bigint; // 14 d.p.
   liquidationThreshold: bigint; // 14 d.p.
   safetyThreshold: bigint; // 14 d.p.
 }
 
-interface LoanInfo {
+export interface LoanInfo {
   currentRound: number;
   escrowAddress: string;
   userAddress: string;
@@ -107,46 +107,26 @@ interface LoanInfo {
   healthFactor: bigint; // 14 d.p.
 }
 
-interface Oracle {
+export interface Oracle {
   oracle1AppId: number,
   oracle2AppId?: number,
   oracleAdapterAppId: number;
   decimals: number;
 }
 
-interface OraclePrice {
+export interface OraclePrice {
   price: bigint; // price in USD for amount 1 of asset in lowest denomination
   timestamp: bigint;
 }
 
-interface OraclePrices {
+export interface OraclePrices {
   currentRound: number;
   prices: Record<number, OraclePrice>,
 }
 
-interface ConversionRate {
+export interface ConversionRate {
   rate: bigint; // <decimals> d.p.
   decimals: number;
 }
 
-type ReserveAddress = string;
-
-export {
-  Pool,
-  PoolInfo,
-  LockAndEarn,
-  LockAndEarnInfo,
-  LockedDepositInfo,
-  RewardsAggregator,
-  AssetRewardsInfo,
-  RewardsAggregatorInfo,
-  StakedRewardsInfo,
-  TokenPair,
-  TokenPairInfo,
-  LoanInfo,
-  Oracle,
-  OraclePrice,
-  OraclePrices,
-  ConversionRate,
-  ReserveAddress,
-};
+export type ReserveAddress = string;
